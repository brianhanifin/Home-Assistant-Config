---
alias: Guest mode
id: guest_mode_on_state_change
mode: restart
trigger:
  - id: to_on
    platform: state
    entity_id: input_boolean.guest_mode
    from: "off"
    to: "on"
  - id: to_off
    platform: state
    entity_id: input_boolean.guest_mode
    from: "on"
    to: "off"
variables:
  adaptive_switches: |
    {% set adaptive_lighting = namespace(switches=[]) %}
    {%- for entity in states.switch if 'switch.adaptive_lighting_' in entity.entity_id
          and entity.entity_id[25:30] not in ["adapt","sleep"] %}
      {%- set adaptive_lighting.switches = adaptive_lighting.switches + [ entity ] %}
    {%- endfor %}
    {{- adaptive_lighting.switches | map(attribute='entity_id') | list }}

  lights_on: |
    {% set group_id= 'group.guest_mode_lights' %}
    {%- set lights_on = expand(group_id) | selectattr('entity_id','in',state_attr(group_id,'entity_id')) | selectattr('state','eq','on') | map(attribute='entity_id') | list %}
    {{- "none" if lights_on|count==0 else lights_on }}

  speech: |
    {%- if trigger.id == "to_on" %}
      {{ [
        "Guest Mode has been enabled for the rest of the day.",
        "Switching to guest mode! ",
        "I have enabled guest mode for the rest of the day. ",
        "System Guest Mode has been enabled.",
        "Guest mode enabled.",
        "Awesome! I will take the rest of the day off.  Guest mode has been enabled.",
        "Guest Mode enabled.  In other words, Manual Mode engaged.",
        "Guest mode enabled.  Have Fun!",
        "Family, Friends and Fun.  Guest mode has been enabled today.",
        "Guest Mode enabled.  I am still doing stuff behind the scenes but probably will not turn off the lights on you."
      ] | random }}
    {%- else %}
      {{ [
        "Guest Mode has been disabled.",
        "Guest Mode disabled."
        ] | random }}
    {%- endif %}
action:
  # - service: script.debug
  #   data:
  #     message: |
  #       trigger.id: {{ trigger.id }}
  #       adaptive_switches: {{ adaptive_switches }}
  #       lights_on: {{ lights_on }}
  #       speech: "{{ speech }}"

  - choose:
      - conditions: '{{ trigger.id == "to_on" }}'
        sequence:
          # - service: script.debug
          #   data:
          #     message: 'to_on'

          - alias: "Disable the automatic front door lock."
            service: input_boolean.turn_on
            target:
              entity_id: input_boolean.leave_unlocked

          - alias: "Disable Adaptive Lighting automated control."
            service: switch.turn_off
            data:
              entity_id: '{{ adaptive_switches }}'
          
          - delay:
              seconds: 2

          - alias: "Kitchen Lights: Turn On"
            service: switch.turn_on
            target:
              area_id:
                - kitchen

          - alias: "Dining + Family room Lights: Turn On"
            service: light.turn_on
            data:
              entity_id: '{{ lights_on }}'
              brightness: 255
              kelvin: 4000
            target:
              area_id:
                - dining_room
                - family_room

    default:
      # - service: script.debug
      #   data:
      #     message: 'to_off'

      - alias: "Restore the automatic front door lock."
        service: input_boolean.turn_off
        target:
          entity_id: input_boolean.leave_unlocked

      - alias: "Kitchen lights to turn off"
        service: switch.turn_off
        target:
          area_id:
            - kitchen

      - alias: "Dining + Family room lights to turn off"
        service: light.turn_off
        target:
          entity_id: light.family_room_floor_lamp
          area_id:
            - dining_room
            #- family_room

      - delay:
          seconds: 2

      - alias: "Restore Adaptive Lighting automated control."
        service: switch.turn_on
        data:
          entity_id: '{{ adaptive_switches }}'

  - service: script.say
    data:
      message: '{{ speech }}'
