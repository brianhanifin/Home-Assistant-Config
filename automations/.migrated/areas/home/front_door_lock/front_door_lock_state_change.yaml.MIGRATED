---
alias: Front door lock state change
id: front_door_lock_state_change
mode: restart
trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: lock.front_door
variables:
  #old_state: '{{ trigger.event.data.old_state.state|lower }}'
  new_state: '{{ trigger.event.data.new_state.state|lower }}'
  outdoor_illuminance: '{{ states("sensor.outdoor_illuminance_educated_guessor")|int(default=0) }}'
condition:
  - '{{ new_state|lower in ["locked","unlocked"] }}'
action:
  # - service: script.debug
  #   data:
  #     title: 'automations > areas > home > front_door_lock_state_change'
  #     message: |
  #       new_state: "{{ new_state }}"
  #       outdoor_illuminance: "{{ outdoor_illuminance }}"

  - choose:
      # Unlock the front door.
      - conditions:
          - '{{ new_state == "unlocked" }}'
        sequence:
          # Start a countdown timer to relock the front door.
          - choose:
              - conditions: '{{ is_state("input_boolean.guest_mode","off")
                  and is_state("input_boolean.leave_unlocked","off") }}'
                sequence:
                  # Start a countdown timer to relock the front door.
                  - service: timer.start
                    data_template:
                      entity_id: timer.front_door_unlocked

                  - service: script.turn_on
                    target:
                      entity_id: script.notify_mobile_clear
                    data:
                      variables:
                        who: 'brian'
                        tag: 'person_detected'

                  ## ================================================================================================= ##

                  # Skip turning on the entry lights in the middle of the day.
                  - choose:
                      - conditions: "{{ outdoor_illuminance < 2000 }}"
                        sequence:
                          # Store the current state of the porch + entry lights.
                          - service: scene.create
                            data:
                              scene_id: front_door_locked_snapshot
                              snapshot_entities:
                                - light.home_entry
                                - light.porch

                          # Full brightness!
                          - service: light.turn_on
                            target:
                              entity_id:
                                - light.home_entry
                                - light.porch
                            data:
                              brightness: 255

                  ## ================================================================================================= ##

                  # Update Light Switch LED Status Color.
                  - service: script.turn_on
                    target:
                      entity_id: script.inovelli_led_status_start
                    data:
                      variables:
                        color: pink
                        state_entity: lock.front_door
                        state: "unlocked"
                        entity_id: light.family_room

      - conditions:
          - '{{ new_state == "locked" }}'
        sequence:
          # Cancel and reset the unlocked timer.
          - service: timer.cancel
            entity_id: timer.front_door_unlocked

          # Disable Leave Unlocked mode.
          - service: input_boolean.turn_off
            entity_id: input_boolean.leave_unlocked

          - service: script.turn_on
            target:
              entity_id: script.notify_mobile_clear
            data:
              variables:
                who: 'brian'
                tag: 'KEEP_UNLOCKED'

          ## ================================================================================================= ##

          # Skip turning on the entry lights in the middle of the day.
          - choose:
              - conditions: "{{ outdoor_illuminance|int(default=0) < 2000 }}"
                sequence:
                  # Restore the previous state of the porch + entry lights.
                  - service: scene.turn_on
                    target:
                      entity_id: scene.front_door_locked_snapshot
                    data:
                      transition: 5

                  - delay:
                      seconds: 10

          # Restore Adaptive Lighting automated control.
          - variables:
              adaptive_switch: switch.adaptive_lighting_home_entry
          - choose:
              - conditions: '{{ is_state(adaptive_switch,"on") }}'
                sequence:
                  - service: switch.turn_off
                    data:
                      entity_id: '{{ adaptive_switch }}'
                  - delay:
                      seconds: 1
                  - service: switch.turn_on
                    data:
                      entity_id: '{{ adaptive_switch }}'

          ## ================================================================================================= ##

          # Update Light Switch LED Status Color.
          - service: script.turn_on
            target:
              entity_id: script.inovelli_led_off
            data:
              variables:
                entity_id: light.family_room
