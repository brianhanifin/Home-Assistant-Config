---
alias: Front door person detected
id: front_door_person_detected
mode: single
trigger:
  # Frigate
  - platform: state
    entity_id:
      - binary_sensor.front_door_person_occupancy
      #- binary_sensor.front_walkway_person_occupancy
    from: "off"
    to: "on"
variables:
  new_state: '{{ trigger.to_state.state|lower }}'
  last_opened: '{{ states.binary_sensor.front_door.last_changed | timestamp_local | as_timestamp }}'
  time_now: '{{ now() | as_timestamp }}'
  seconds_difference: '{{ time_now - last_opened }}'
  door_recently_opened: '{{ seconds_difference|round(default=0) < 120 }}'
  outdoor_illuminance: '{{ states("sensor.outdoor_illuminance_educated_guessor") }}'
condition:
  - '{{ door_recently_opened == false }}'
action:
  # - service: script.debug
  #   data:
  #     message: 'new_state: {{ new_state }}'

  # Skip turning on the entry lights in the middle of the day.
  - choose:
      - conditions: "{{ outdoor_illuminance|int(default=0) < 2000 }}"
        sequence:
          # Store the current state of the porch light.
          - service: scene.create
            data:
              scene_id: front_door_presence_snapshot
              snapshot_entities:
                - light.home_entry
                - light.porch

          # Full brightness!
          - service: light.turn_on
            data:
              entity_id: light.porch
              kelvin: 3500
              brightness: 255
          - service: light.turn_on
            data:
              entity_id: light.home_entry
              brightness: 255

  # Send a notification when a person is detected.
  - if: '{{ new_state == "on" }}'
    then:
      - alias: Stream the camera feed to Apple TV.
        if: '{{ is_state("media_player.family_room_tv", "on") }}'
        then:
          - service: remote.turn_on
            target:
              entity_id: remote.family_room_apple_tv

          - service: remote.send_command
            target:
              entity_id: remote.family_room_apple_tv
            data:
              command: pause

          - delay:
              seconds: 4

          - service: camera.play_stream
            continue_on_error: true
            target:
              entity_id: camera.front_door_rtsp
            data:
              media_player: media_player.family_room_apple_tv

      - delay:
          seconds: 4

      - parallel:
          - service: script.notify_mobile
            continue_on_error: true
            data:
              title: Front Door
              message: Person Detected
              #camera: camera.front_door_rtsp
              camera: camera.front_door
              who: brian
              tag: 'person_detected'
              url: /lovelace/outdoor

          - service: script.cast
            data:
              displays:
                - 0aae07dda66f42e9b8a67979e34770d0
                - 7d6b52507e25e7eeba10914e56052d1c
              dashboard_path: dashboard-cast
              view_path: cameras
              dismiss_after: 120

          - service: script.notify_pc
            continue_on_error: true
            data:
              title: Front Door
              message: Person Detected
              camera: camera.front_door_rtsp
              pc: blackpc

      - delay:
          seconds: 60

      - alias: Is the video still steaming to the TV?
        if: '{{ is_state_attr("media_player.family_room_apple_tv", "app_name", "Overcast") }}'
        then:
          - alias: Go back to the previous app.
            service: remote.send_command
            target:
              entity_id: remote.family_room_apple_tv
            data:
              command:
                - menu

  # Cool down timer. When "mode: single" this stops this automation from running more often than this.
  - delay:
      minutes: 5
