---
alias: "Insecure door: actionable notification"
description: Warn us if any doors or windows are open or unlocked.
id: insecure_door_actionable_notification
mode: restart
trigger:
  - alias: Trigger the notification at 8pm.
    platform: time
    at: "20:00:00"
action:
  - variables:
      front_door_unlocked: '{{ is_state("lock.front_door","unlocked") }}'
      garage_door_open: '{{ is_state("cover.garage_door","open") }}'
  - condition:
      - "{{ front_door_unlocked or garage_door_open }}"
  - alias: Send the actionable notification.
    service: script.notify_mobile
    data:
      who: "brian"
      title: "SAFETY ALERT: INSECURE DOOR{% if front_door_unlocked and garage_door_open %}S{% endif %}"
      message: |
        {{ "The front door is unlocked!" if front_door_unlocked }}
        {{ "The garage door is open!" if garage_door_open }}
      tag: INSECURE_DOOR
      #critical: true
      url: /lovelace/outdoor
      actions:
        - action: SECURE_DOORS
          title: Secure doors
          behavior: "default"
        - action: NO_ACTION
          title: Leave them be
          destructive: true

  # Wait for the requested response, or secure the doors after the timeout elapses.
  - alias: Awaiting action selection.
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "SECURE_DOORS"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "NO_ACTION"
    timeout:
      minutes: "15"
    continue_on_timeout: true

  - variables:
      chosen_action: "{{ wait.trigger.event.data.action }}"

  # - service: script.debug
  #   data:
  #     message: |
  #       chosen_action: {{ chosen_action }}
  #       wait.completed == false: {{ wait.completed == false }}

  - choose:
      - conditions:
          - '{{ chosen_action == "SECURE_DOORS" or wait.completed == false }}'
        sequence:
          - alias: Lock the front door.
            choose:
              - conditions:
                  - condition: state
                    entity_id: lock.front_door
                    state: "unlocked"
                sequence:
                  - service: lock.lock
                    entity_id: lock.front_door

          - alias: Close the garage door.
            choose:
              - conditions:
                  - condition: state
                    entity_id: cover.garage_door
                    state: "open"
                sequence:
                  - service: cover.close_cover
                    entity_id: cover.garage_door
