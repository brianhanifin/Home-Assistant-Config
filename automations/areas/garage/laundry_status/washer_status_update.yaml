---
alias: Washer status update
id: washer_status_update
description: Update the current washer status when certain criteria are met.
mode: queued
trigger:
  # Update state when the wet laundry status changes.
  - id: wet_laundry_alert_begins
    platform: state
    entity_id: binary_sensor.alert_wet_laundry
    to: "on"
  - id: wet_laundry_alert_cleared
    platform: state
    entity_id: binary_sensor.alert_wet_laundry
    to: "off"

  # Update when the dryer state changes to Drying.
  - id: dryer_drying
    platform: state
    entity_id: input_select.dryer_status
    to: "Drying"

  # LG washer running state.
  # - id: washer_run_state_change
  #   platform: state
  #   entity_id: sensor.washer_run_state
  #   to: ~
  #   not_to: null

  # Make decisions based on the Washer power usage.
  - id: washer_power_use_high
    platform: numeric_state
    entity_id: sensor.washing_machine_power_monitor_power
    above: 20
    for:
      minutes: 2
  # - id: washer_power_use_medium
  #   platform: numeric_state
  #   entity_id: sensor.washing_machine_power_monitor_power
  #   below: 21
  #   above: 3
  #   for:
  #     minutes: 2
  - id: washer_power_use_low
    platform: numeric_state
    entity_id: sensor.washing_machine_power_monitor_power
    below: 4
    for:
      minutes: 2

  # LG ThinQ reported the washer just powered on.
  - id: washer_from_off_to_on
    platform: state
    entity_id: sensor.washer
    from: "off"
    to: "on"

  # LG ThinQ reported the wash is complete.
  - id: washer_lg_complete
    platform: state
    entity_id: binary_sensor.washer_wash_completed
    from: "off"
    to: "on"

  # LG ThinQ reported an error occurred.
  - id: washer_error_state
    platform: state
    entity_id: binary_sensor.washer_error_state
    from: "off"
    to: "on"
variables:
  trigger_id: '{{ trigger.id }}'

  run_state: '{{ states("sensor.washer_run_state") }}'
  washer_running: '{{ run_state not in ["","-","null"] }}'
  previous_status: '{{ states("input_select.washer_status") }}'

  # Off, Standby, Washing, Clean, Error
  status: |
    {% if trigger_id == "washer_power_use_high" or (trigger_id == "washer_run_state_change" and washer_running) %}
      Washing
    {%- elif trigger_id == "wet_laundry_alert_cleared" or
          (trigger_id == "dryer_drying" and previous_status == "Clean") or
          trigger_id == "washer_power_use_low" and previous_status != "Clean"
    %}
      Off
    {%- elif trigger_id == "washer_lg_complete" or previous_status == "Washing" %}
      Clean
    {%- elif trigger_id == "washer_from_off_to_on" or previous_status == "Off" %}
      Standby
    {%- elif trigger_id == "washer_error_state" %}
      Error
    {%- endif %}
  notify_title: 'Error: Washing Machine'
  notify_message: |
    Error. The washing machine has an error. {{ state_attr('sensor.washer','error_message') }}
# condition:
#   - condition: template
#     value_template: '{{
#         status not in ["","Unknown"] and
#         (trigger_id == "washer_run_state_change" and states("sensor.washer_run_state") not in ["","-","null"])
#       }}'
action:
  - service: input_select.select_option
    target:
      entity_id: input_select.washer_status
    data:
      option: '{{ status }}'

  - if:
      - condition: template
        value_template: '{{ trigger_id == "wet_laundry_alert_begins" }}'
    then:
      - service: timer.cancel
        target:
          entity_id: timer.washer_clean
      - service: timer.start
        target:
          entity_id: timer.washer_clean

  - if:
      - condition: template
        value_template: '{{
          trigger_id == "wet_laundry_alert_cleared" or
          trigger_id == "dryer_drying"
        }}'
    then:
      - service: timer.finish
        target:
          entity_id: timer.washer_clean

  - if:
      - condition: template
        value_template: '{{ status == "Error" }}'
    then:
      - service: script.notify_speech
        data:
          media_player: media_player.google_downstairs
          message: '{{ notify_message }}'

      - service: script.notify_mobile
        data:
          title: '{{ notify_title }}'
          message: '{{ notify_message }}'
          who: brian
          url: /lovelace-special/laundry

  # - if: '{{ status not in ["Standby","Error"] }}'
  #   then:
  #     # Cool down timer. When "mode: single" this stops this automation from running more often than this.
  #     # - In this case it stops the washer from toggling between Clean and back to Washing within 10 seconds.
  #     #   This should stop the complete announcement from repeating after 1 minute.
  #     - delay:
  #         seconds: 300
