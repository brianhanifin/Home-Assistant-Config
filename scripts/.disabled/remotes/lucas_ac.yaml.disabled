---
# Get more codes from (or learn), then add to /config/.storage/broadlink_remote_a043b032d481_codes:
# https://github.com/smartHomeHub/SmartIR/blob/master/codes/climate/1068.json
#
# lucas_ac
#   power
#   temp_down
#   temp_up
#   fan_speed
#   timer
#   mode
#   cool_64
#   cool_68
#   cool_72
#   cool_76
variables:
  remote: remote.lucas_room
  device: lucas_room_ac
  is_on: '{{ not is_state("climate.lucas_room","off") }}'
  recommended_mode: '{{ states("sensor.lucas_recommended_climate_mode") }}'
  commands: |
    {%- set commands = "none" %}
    {%- if mode == "off" %}
      {%- if not is_on %}
        {%- set commands = "none" %}
      {%- else %}
        {%- set commands = "power" %}
      {%- endif %}
    {%- elif mode == "fan" %}
      {%- if not is_on %}
        {%- set commands = "power, mode, mode" %}
      {%- elif is_on %}
        {%- set commands = "mode, mode" %}
      {%- else %}
        {%- set commands = "none" %}
      {% endif %}
    {%- elif mode == "cool" %}
      {%- if not is_on %}
        {%- set commands = "power, cool_64" %}
      {%- elif is_on %}
        {%- set commands = "cool_64" %}
      {%- else %}
        {%- set commands = "none" %}
      {% endif %}
    {%- elif mode == "auto" %}
      {%- if recommended_mode == "fan" %}
        {%- if not is_on %}
          {%- set commands = "power, mode, mode" %}
        {%- elif is_on %}
          {%- set commands = "mode, mode" %}
        {%- else %}
          {%- set commands = "none" %}
        {% endif %}
      {%- elif recommended_mode == "cool" %}
        {%- if not is_on %}
          {%- set commands = "power, cool_64" %}
        {%- elif is_on %}
          {%- set commands = "cool_64" %}
        {%- else %}
          {%- set commands = "none" %}
        {% endif %}
      {%- elif recommended_mode == "off" %}
        {%- if not is_on %}
          {%- set commands = "none" %}
        {%- else %}
          {%- set commands = "power" %}
        {%- endif %}
      {%- endif %}
    {%- endif %}
    {{ commands|replace(" ","") }}
  command_count: '{{ 0 if commands == "none" else commands.split(",") | count }}'
sequence:
  # - service: script.debug
  #   data:
  #     message: |
  #       mode: {{ mode }}
  #       recommended_mode: {{ recommended_mode }}
  #       command_count: {{ command_count }}
  #       commands: {{ commands }}

  - service: script.notify_web
    data:
      message: 'commands: {{ commands }}'

  # If command "none" is passed, then someone tried to turn an A/C on that was already on.
  # So don't do anything, as another "power" instruction would just turn the A/C off.
  - condition: template
    value_template: '{{ command_count > 0 }}'

  - choose:
      - conditions: '{{ mode == "auto" or auto == true }}'
        sequence:
          - alias: Allow only one mode at a time.
            service: homeassistant.turn_off
            target:
              entity_id:
                - switch.lucas_ac_cool
                - switch.lucas_ac_fan

    default:
      - choose:
          - conditions: '{{ mode == "fan" }}'
            sequence:
              - alias: Allow only one mode at a time.
                service: homeassistant.turn_off
                target:
                  entity_id:
                    - switch.lucas_ac_auto
                    - switch.lucas_ac_cool

          - conditions: '{{ mode == "cool" }}'
            sequence:
              - alias: Allow only one mode at a time.
                service: homeassistant.turn_off
                target:
                  entity_id:
                    - switch.lucas_ac_auto
                    - switch.lucas_ac_fan

          - conditions: '{{ mode == "off" }}'
            sequence:
              - alias: Turn all toggles off.
                service: homeassistant.turn_off
                target:
                  entity_id:
                    - switch.lucas_ac_auto
                    - switch.lucas_ac_cool
                    - switch.lucas_ac_fan

  - repeat:
      count: '{{ command_count|int(default=0) }}'
      sequence:
        - variables:
            command: '{{ commands.split(",")[repeat.index-1] }}'

        - service: remote.send_command
          target:
            entity_id: '{{ remote }}'
          data:
            device: '{{ device }}'
            command: '{{ command }}'

        # - service: script.notify_web
        #   data:
        #     message: 'commands[{{ repeat.index-1 }}]: {{ command }}'
        # - delay:
        #     seconds: 2
