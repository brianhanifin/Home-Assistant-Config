---
alias: Notify audio
icon: mdi:google-home
variables:
  #debug: true

  entities: |
    {%- if speakers is defined %}
      {%- set entities = speakers %}
    {%- else %}
      {%- set entities = '["media_player.google_family_room_display"]' %}
    {%- endif %}
    {{ entities }}

  audio_file: '{{ audio_file|default("media-source://media_source/local/audio/sfx-pop4.mp3") }}'
  content_type: '{{ content_type|default("audio") }}'

  new_volume: |
    {%- if volume is number %}
      {%- if volume > 1.0 %}
        {%- set volume = volume / 100 %}
      {%- else %}
        {%- set volume = volume %}
      {%- endif %}
    {%- else %}
      {%- set volume = states("input_number.default_audio_volume")|float(default=0) / 100 %}
    {%- endif %}
    {{ volume }}

  audio_notifications: '{{ is_state("input_boolean.audio_notifications", "on") }}'
  quiet_time: '{{ is_state("binary_sensor.noncritical_alert_quiet_time", "on") }}'
  family_home: '{{ is_state("group.family", "home") }}'
  guest_mode: '{{ is_state("input_boolean.guest_mode", "on") }}'
sequence:
  - if: '{{ debug is defined and debug == true }}'
    then:
      - service: script.debug
        data:
          message: |
            speakers: {{ speakers }}
            entities|count: {{ entities|count }}
            {{ speakers[0] }}

            audio_file: {{ audio_file }}
            content_type: {{ content_type }}
            new_volume: {{ new_volume }}

            audio_notifications: {{ audio_notifications }}
            quiet_time: {{ quiet_time }}

            audio_notifications and not quiet_time: {{ audio_notifications and not quiet_time }}

  - if: '{{
          (audio_notifications and not quiet_time)
          and (family_home or guest_mode)
        }}'
  #- if: '{{ audio_notifications and not quiet_time }}'
    then:
      - alias: "Play the audio on all selected speakers."
        repeat:
          count: '{{ entities|count }}'
          sequence:
            - variables:
                speaker: "{{ entities[repeat.index-1] }}"
                current_volume: '{{ state_attr(speaker, "volume_level")|float(default=states("input_number.default_announcement_volume")|float(default=5) / 100) }}'

            - if: '{{ debug is defined and debug == true }}'
              then:
                - service: script.debug
                  data:
                    message: |
                      repeat.index: {{ repeat.index-1 }}
                      speaker: {{ speaker }}
                      current_volume: {{ current_volume }}
                      new_volume: {{ new_volume }}

            - alias: "Set player to defined volume."
              service: media_player.volume_set
              data:
                entity_id: "{{ speaker }}"
                volume_level: "{{ new_volume }}"

            - delay:
                seconds: 1

            - alias: "Play the audio."
              service: media_player.play_media
              data:
                entity_id: "{{ speaker }}"
                media_content_id: "{{ audio_file }}"
                media_content_type: "{{ content_type }}"

            - alias: "Wait for the audio to finish playing."
              wait_for_trigger:
                platform: template
                value_template: '{{ is_state(speaker, "idle") }}'
              timeout:
                minutes: 1
              continue_on_timeout: true

            - alias: "Restore previous volume."
              service: media_player.volume_set
              data:
                entity_id: "{{ speaker }}"
                volume_level: "{{ current_volume }}"

fields:
  speakers:
    description: Select the speakers the audio should play on.
    selector:
      entity:
        multiple: true
        #integration: cast
  audio_file:
    description: Path to the audio file.
    default: media-source://media_source/local/audio/jetsons-doorbell.mp3
    selector:
      text:
  volume:
    description: 'WARNING: this will override your preset "Default audio volume"!'
    default: 10
    selector:
      number:
        min: 5
        max: 100
        step: 5
