---
alias: Cast
mode: parallel
icon: 'mdi:cast'
sequence:
  - variables:
      entities: |
        {%- set data = namespace(displays="") %}
        {%- if displays is defined %}
          {%- if displays is not string %}
            {%- for display in displays %}
              {%- set data.displays = data.displays ~ '"' ~ device_entities(display)[0] ~ '"' ~ iif(not loop.last, ",", "") %}
            {%- endfor %}
          {%- else %}
            {%- set data.displays = '"' ~ device_entities(displays)[0] ~ '"' %}
          {%- endif %}
        {%- else %}
          {%- set data.displays = '"media_player.google_kitchen"' %}
        {%- endif %}
        [{{ data.displays }}]

  - service: script.debug
    enabled: false
    data:
      message: |
        displays is not string: '{{ displays is not string }}'
        dismiss_after is defined: '{{ dismiss_after is defined }}'

        displays: '{{ displays }}'

        entities: '{{ entities }}'
        count: {{ entities|count }}

        dashboard_path: "{{ dashboard_path }}"
        view_path: "{{ view_path }}"

        dismiss_after: '{{ dismiss_after }}'

  - alias: "Turn off the media players before we cast a new page for it to display."
    service: media_player.turn_off
    target:
      entity_id: '{{ entities }}'

  - alias: "Cast a page to the specified displays."
    repeat:
      count: '{{ entities|count }}'
      sequence:
        - alias: "Cast a dashboard to a display."
          service: cast.show_lovelace_view
          data:
            entity_id: '{{ entities[repeat.index-1] }}'
            dashboard_path: '{{ dashboard_path }}'
            view_path: '{{ view_path }}'

  - alias: "If `dismiss_after` is set, then turn off the displays after the specified delay."
    if: '{{ dismiss_after is defined }}'
    then:
      - delay:
          seconds: '{{ dismiss_after }}'

      - alias: "Stop the displays."
        service: media_player.turn_off
        target:
          entity_id: '{{ entities }}'

fields:
  displays:
    description: Select the Google cast display(s).
    selector:
      device:
        multiple: true
        integration: cast
        entity:
          domain: media_player
  dashboard_path:
    description: Path to the desired dashboard.
    default: dashboard-cast
    example: lovelace
    required: false
    selector:
      text:
  view_path:
    description: Path to the page within the dashboard
    default: cameras
    example: home
    required: false
    selector:
      text:
  dismiss_after:
    description: "Reset the display after # seconds."
    required: false
    selector:
      number:
        min: 60
        max: 300
