- id: '1588556714529'
  alias: Maintenance at midnight
  description: Runs every night at midnight.
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - data:
      message: Daily maintenance begins.
      type: warning
      duration: 300
    service: script.notify_web
  - service: homeassistant.turn_off
    target:
      entity_id:
      - input_boolean.guest_mode
      - input_boolean.leave_unlocked
    data: {}
  - data: {}
    service: script.holiday_sensors_update
  - data:
      keep_days: 10
      repack: true
    service: recorder.purge
  - service: script.notify_web
    data:
      type: success
      message: Daily maintenance complete.
  mode: single
- id: '1614889037575'
  alias: 'Multi-click handler: family room'
  description: Inovelli red series LZW31-SN dimmer (ZWave-JS)
  use_blueprint:
    path: brianhanifin/zwave_js_inovelli_lzw31_sn_red_series_dimmer.yaml
    input:
      inovelli_switch: 2d8b03f66fda68a6e0f7b2a506a33b02
      button_a3:
      - service: fan.turn_on
        data: {}
        target:
          entity_id: fan.family_room
      button_b3:
      - service: fan.turn_off
        target:
          entity_id: fan.family_room
        data: {}
      config_button:
      - service: homeassistant.turn_off
        target:
          entity_id: group.family_room_lights
        data: {}
      button_a: []
      button_b:
      - type: turn_off
        device_id: 42fec827b0c1823c608f8d9a9cdac97e
        entity_id: light.table_lamp
        domain: light
      - type: turn_off
        device_id: 63789fb09fae954b2c90a2aa98f6b102
        entity_id: light.family_room_floor_lamp
        domain: light
      button_a_held: []
      button_b_held: []
      button_a2:
      - type: turn_on
        device_id: 63789fb09fae954b2c90a2aa98f6b102
        entity_id: light.family_room_floor_lamp
        domain: light
      button_b2:
      - type: turn_off
        device_id: 63789fb09fae954b2c90a2aa98f6b102
        entity_id: light.family_room_floor_lamp
        domain: light
      button_a5:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.guest_mode
        data: {}
      button_b5:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.guest_mode
        data: {}
      button_a4:
      - service: homeassistant.turn_on
        target:
          area_id:
          - dining_room
          - kitchen
          device_id:
          - 63789fb09fae954b2c90a2aa98f6b102
          - 2d8b03f66fda68a6e0f7b2a506a33b02
          - 1ad4b3bd16edcc7d4961b3e95ed57f70
          - 385bbbe37417eec30709aadfd0f37152
        data: {}
      button_b4:
      - type: turn_on
        device_id: 1ad4b3bd16edcc7d4961b3e95ed57f70
        entity_id: light.home_entry
        domain: light
        brightness_pct: 40
      - service: homeassistant.turn_off
        target:
          area_id:
          - dining_room
          - kitchen
          - family_room
        data: {}
- id: '1615053055187'
  alias: 'Multi-click handler: bedroom dimmer'
  description: ''
  use_blueprint:
    path: kpine/ge_double.yaml
    input:
      device: 8bef4ccfe78c1356e14212171ff1bfc7
      double_tap_on:
      - service: light.turn_on
        data:
          transition: 0
          brightness_pct: 100
        target:
          entity_id:
          - light.bedroom
          - light.bedroom_east
          - light.bedroom_table_lamp
      double_tap_off:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.sound_machine
          - climate.bedroom
          - fan.bedroom
          - switch.sound_machine
          - light.bedroom
          - light.bedroom_table_lamp
          - light.bedroom_east
- id: '1618159056314'
  alias: Startup
  description: Actions to run at startup.
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.notify_web
    data:
      message: Startup automation begins.
      type: warning
      duration: 120
  - service: frontend.set_theme
    data:
      name: Mushroom
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: script.inovelli_led_set_defaults
    data:
      entity_id: light.family_room
      color: Teal
  - service: watchman.report
    data: {}
  - service: script.notify_web
    data:
      message: Startup automation complete.
      type: success
      duration: 60
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.startup
  mode: single
  initial_state: true
- id: '1620056955070'
  alias: 'Scheduled tasks: hourly'
  description: Tasks to run every hour.
  trigger:
  - platform: time_pattern
    hours: /1
  condition: []
  action:
  - service: script.refresh_update_sensors
  mode: single
- id: '1620532169172'
  alias: Keep startup automation off
  description: The startup automation will turn back on after an automation reload.
    So turn it right back off when it changes from "unavailable" to "on".
  trigger:
  - platform: event
    event_type: automation_reloaded
  condition:
  - condition: template
    value_template: '{%- set uptime_minutes = as_timestamp(now()) - as_timestamp(states("sensor.last_restart"))|float(default=0)
      / 60 %}

      {{ uptime_minutes > 5 }}'
  action:
  - service: automation.turn_off
    target:
      entity_id: automation.startup
  mode: single
- id: '1624556633877'
  alias: Safety alert garage door obstruction detected
  description: Alert when the garage door is unable to close due an obstruction.
  trigger:
  - platform: state
    entity_id: cover.garage_door
    attribute: obstruction-detected
    from: 'false'
    to: 'true'
    for: 0:01:00
  condition: []
  action:
  - service: script.notify_speech
    data:
      media_player: media_player.google_welcome
      message: The garage door cannot close due to an obstruction. Please help the
        garage door close safely.
  - service: script.notify_mobile
    data:
      title: Garage door obstructed
      url: /lovelace/outdoor
      message: The garage door cannot close due to an obstruction. Please help the
        garage door close safely.
      critical: true
  mode: single
- id: '1638465871838'
  alias: Maintenance before sunrise
  description: 'Runs every day 2 hours before sunrise.

    1. Reset Adaptive lighting switches.

    2. Update watchman report.

    3. Bedroom Do Not Disturb'
  trigger:
  - platform: sun
    event: sunrise
    offset: '-2:00:00'
  condition: []
  action:
  - service: switch.turn_off
    data:
      entity_id: '{{ switches }}'
  - delay:
      seconds: 5
  - service: switch.turn_on
    data:
      entity_id: '{{ switches }}'
  - service: watchman.report
    data: {}
  - if:
    - condition: state
      entity_id: switch.google_bedroom_do_not_disturb
      state: 'off'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.google_bedroom_do_not_disturb
  mode: single
  variables:
    switches: "{% set adaptive_lighting = namespace(switches=[]) %}\n{%- for entity\
      \ in states.switch if 'switch.adaptive_lighting_' in entity.entity_id\n    \
      \  and entity.entity_id[25:30] not in [\"adapt\",\"sleep\"] %}\n  {%- set adaptive_lighting.switches\
      \ = adaptive_lighting.switches + [ entity ] %}\n{%- endfor %} {{- adaptive_lighting.switches\
      \ | map(attribute='entity_id') | list }}\n"
- id: '1638910619111'
  alias: 'Maintenace: lights off after sunrise'
  description: Turn the entry and porch lights off after sunrise.
  trigger:
  - platform: sun
    event: sunrise
    offset: +00:45:00
  action:
  - type: turn_off
    device_id: 1ad4b3bd16edcc7d4961b3e95ed57f70
    entity_id: light.home_entry
    domain: light
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.porch
- id: '1640128623256'
  alias: 'Maintenance: lights before sunset'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
  action:
  - service: light.turn_on
    target:
      device_id:
      - 1ad4b3bd16edcc7d4961b3e95ed57f70
      - 385bbbe37417eec30709aadfd0f37152
    data: {}
  - service: script.say
    data:
      media_player: media_player.google_kitchen
      say_dark_outside: 'true'
  - if:
    - condition: state
      entity_id: binary_sensor.work_day
      state: 'on'
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id:
        - light.family_room
        - light.table_lamp
  mode: single
- id: '1640887750655'
  alias: Wet laundry Family room LED indicator
  description: The light will chase blue when the laundry wet alert is active.
  use_blueprint:
    path: brianhanifin/inovelli_led_notify.yaml
    input:
      trigger_entity_id: alert.wet_laundry
      on_trigger_state: 'on'
      off_trigger_state: idle
      inovelli_entity_id: light.family_room
      color: Blue
      effect: Chase
      duration: Indefinitely
- id: '1641060240716'
  alias: Mobile widget actions
  description: Take actions based on the iPhone widget button pressed.
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: hot_water_on
    id: hot_water_on
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hot_water_on
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.hot_water_pump
    default: []
  mode: parallel
  max: 10
- id: '1642400705340'
  alias: 'Z2M - Remote: Brian bedside'
  description: ''
  use_blueprint:
    path: mozartbanging/zigbee2mqtt-aqara-opple-wxcjkg13lm-3-band-switch-all-custom-buttons.yaml
    input:
      switch: sensor.remote_brian_bedside_action
      button_1_single:
      - service: light.toggle
        data:
          transition: 0
        target:
          entity_id: light.bedroom
      button_2_single:
      - service: light.toggle
        data:
          transition: 0
        target:
          entity_id: light.bedroom_east
      button_1_double:
      - service: light.toggle
        target:
          device_id: ca15d133b0892224f12740ec003bf25c
        data:
          transition: 0
      button_2_double:
      - service: light.toggle
        data:
          transition: 0
        target:
          device_id: ca15d133b0892224f12740ec003bf25c
      button_3_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.bedroom_fan_power
            state: 'on'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.bedroom
        default:
        - service: fan.turn_on
          data: {}
          target:
            entity_id: fan.bedroom
      button_4_single:
      - service: switch.toggle
        target:
          device_id: 4fb4fa5e3d2742488c93b02c34bbd7e8
        data: {}
      button_6_single:
      - service: climate.turn_off
        target:
          entity_id: climate.bedroom
        data: {}
      button_5_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: climate.bedroom
            state: cool
          sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.bedroom
            data:
              hvac_mode: fan_only
        default:
        - service: climate.set_hvac_mode
          target:
            entity_id: climate.bedroom
          data:
            hvac_mode: cool
- id: '1642402019243'
  alias: 'Z2M - Remote: Nerene bedside'
  description: ''
  use_blueprint:
    path: mozartbanging/zigbee2mqtt-aqara-opple-wxcjkg13lm-3-band-switch-all-custom-buttons.yaml
    input:
      switch: sensor.remote_nerene_bedside_action
      button_1_single:
      - service: light.toggle
        data:
          transition: 0
        target:
          entity_id: light.bedroom
      button_2_single:
      - service: light.toggle
        data:
          transition: 0
        target:
          entity_id: light.bedroom_east
      button_1_double:
      - service: light.toggle
        target:
          device_id: ca15d133b0892224f12740ec003bf25c
        data:
          transition: 0
      button_2_double:
      - service: light.toggle
        data:
          transition: 0
        target:
          device_id: ca15d133b0892224f12740ec003bf25c
      button_3_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.bedroom_fan_power
            state: 'on'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.bedroom
        default:
        - service: fan.turn_on
          data: {}
          target:
            entity_id: fan.bedroom
      button_4_single:
      - service: switch.toggle
        target:
          device_id: 4fb4fa5e3d2742488c93b02c34bbd7e8
        data: {}
      button_6_single:
      - service: climate.turn_off
        target:
          entity_id: climate.bedroom
        data: {}
      button_5_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: climate.bedroom
            state: cool
          sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.bedroom
            data:
              hvac_mode: fan_only
        default:
        - service: climate.set_hvac_mode
          target:
            entity_id: climate.bedroom
          data:
            hvac_mode: cool
- id: '1642441568665'
  alias: 'Z2M - Remote: Lucas bedside'
  description: ''
  use_blueprint:
    path: rhl2401/zigbee2mqtt_aqara_wireless_switch.yaml
    input:
      switch: sensor.remote_lucas_bedside_action
      press_single:
      - service: light.toggle
        target:
          device_id: 759c08b03f409722c65c5fddb29837d1
        data:
          transition: 0
      press_double:
      - choose:
        - conditions:
          - condition: state
            entity_id: climate.lucas_room
            state: 'off'
          sequence:
          - service: climate.turn_on
            target:
              entity_id: climate.lucas_room
        default:
        - service: climate.turn_off
          target:
            entity_id: climate.lucas_room
- id: '1642442618846'
  alias: 'Z2M - Remote: Kyle bedside'
  description: ''
  use_blueprint:
    path: rhl2401/zigbee2mqtt_aqara_wireless_switch.yaml
    input:
      switch: sensor.remote_kyle_bedside_action
      press_single:
      - service: light.toggle
        data:
          transition: 0
          brightness_pct: 100
        target:
          entity_id: light.kyle_bedside
- id: '1642443845360'
  alias: 'Z2M - Remote: family room 5 button'
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.remote_family_room_action
      helper_last_controller_event: input_text.z2m_blueprint_helper_last_controller_event
      action_button_up_short:
      - service: light.turn_on
        target:
          device_id:
          - 2d8b03f66fda68a6e0f7b2a506a33b02
          - 42fec827b0c1823c608f8d9a9cdac97e
        data:
          transition: 1
      action_button_down_short:
      - service: light.turn_off
        target:
          device_id:
          - 2d8b03f66fda68a6e0f7b2a506a33b02
          - 42fec827b0c1823c608f8d9a9cdac97e
        data:
          transition: 1
      action_button_left_short:
      - service: light.turn_off
        data:
          transition: 1
        target:
          device_id: 63789fb09fae954b2c90a2aa98f6b102
      action_button_right_short:
      - service: light.turn_on
        target:
          device_id: 63789fb09fae954b2c90a2aa98f6b102
        data:
          transition: 1
- id: '1642448378521'
  alias: 'Z2M - Remote:  printer'
  description: ''
  use_blueprint:
    path: freakshock/zigbee2mqtt-xiaomi-mijia-round-wireless-remote-switch-wxkg01lm-actions.yaml
    input:
      button_sensor: sensor.remote_printer_action
      remote_button_single_press:
      - service: switch.toggle
        target:
          device_id: b397a55fe03e4571a4cb668d7064b277
- id: '1642908642407'
  alias: Doorbell pushed
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.doorbell_action
    to: bell1
  condition: []
  action:
  - service: script.notify_audio
    continue_on_error: true
    data:
      audio_file: media-source://media_source/local/audio/jetsons-doorbell.mp3
      speakers:
      - media_player.google_family_room_display
  - parallel:
    - service: script.cast
      continue_on_error: true
      data:
        dashboard_path: dashboard-cast
        view_path: cameras
        dismiss_after: 120
        display:
        - 7d6b52507e25e7eeba10914e56052d1c
    - service: script.notify_mobile
      continue_on_error: true
      data:
        who: brian
        title: Doorbell
        message: Someone pushed the doorbell.
        camera: camera.front_door
    - service: script.notify_web
      continue_on_error: true
      data:
        message: Someone pressed the doorbell!
        duration: 60
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: script.cast
    continue_on_error: true
    data:
      displays:
      - 0aae07dda66f42e9b8a67979e34770d0
      dashboard_path: dashboard-cast
      view_path: cameras
      dismiss_after: 120
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1643829963937'
  alias: HACS install event - update sensors
  description: ''
  trigger:
  - platform: event
    event_type: hacs/repository
    event_data:
      action: install
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.updates
  mode: single
- id: '1643862026593'
  alias: External IP changed
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.external_ip
  condition: []
  action:
  - service: script.notify_mobile
    data:
      who: brian
      title: IP changed
      message: 'From: {{trigger.from_state.state}}

        To: {{trigger.to_state.state}}'
  mode: single
- id: '1644783738380'
  alias: Google next timer actions
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.google_next_timer
    attribute: end_time
    id: update_end_time
  - platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.google_next_timer
    id: timer_started
    enabled: true
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.google_next_timer
    id: timer_finished
  - platform: event
    event_type:
    - timer.cancelled
    - timer.paused
    event_data:
      entity_id: timer.google_next_timer
    id: timer_cancelled
  - platform: state
    entity_id: input_button.google_next_timer_cancel
    id: cancel_button_pressed
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ state_attr("sensor.google_next_timer","end_time") == none
        }}'
    then:
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.google_next_timer
    - service: media_player.turn_off
      target:
        entity_id: media_player.google_kitchen
      data: {}
    else:
    - choose:
      - conditions:
        - condition: trigger
          id: update_end_time
        sequence:
        - service: timer.start
          target:
            entity_id: timer.google_next_timer
          data:
            duration: '{%- set now = now()|as_timestamp %}

              {%- set end_time = state_attr("sensor.google_next_timer","end_time")|as_timestamp
              %}

              {%- set seconds_until_end = end_time - now %}

              {{ seconds_until_end }}

              '
        - delay:
            seconds: 5
        - service: script.cast
          continue_on_error: true
          data:
            dashboard_path: dashboard-cast
            view_path: timers
            display:
            - 0aae07dda66f42e9b8a67979e34770d0
            - 7d6b52507e25e7eeba10914e56052d1c
      - conditions:
        - condition: trigger
          id: timer_started
          enabled: true
        sequence:
        - service: script.cast
          continue_on_error: true
          data:
            dashboard_path: dashboard-cast
            view_path: timers
            display:
            - 0aae07dda66f42e9b8a67979e34770d0
            - 7d6b52507e25e7eeba10914e56052d1c
      - conditions:
        - condition: trigger
          id: timer_finished
        sequence:
        - service: script.notify_speech
          data:
            media_player: media_player.google_kitchen
            message: Your {{ state_attr("sensor.google_next_timer", "label") }} just
              ended.
        - service: script.notify_web
          data:
            type: alert
            title: '{{ state_attr("sensor.google_next_timer", "label") }} has ended'
            message: '{%- set end_time = state_attr("sensor.google_next_timer","end_time")|default(now())|as_datetime
              %}

              **{{ state_attr("sensor.google_next_timer", "label") }}** {{ " ended
              at " ~

              "{:1}:{:02}:{:02}".format(end_time.hour, end_time.minute, end_time.second)
              }}

              '
        - service: script.cast
          continue_on_error: true
          data:
            dashboard_path: dashboard-cast
            view_path: timers
            dismiss_after: 120
            display:
            - 0aae07dda66f42e9b8a67979e34770d0
            - 7d6b52507e25e7eeba10914e56052d1c
      - conditions:
        - condition: or
          conditions:
          - condition: trigger
            id: cancel_button_pressed
          - condition: trigger
            id: timer_cancelled
        sequence:
        - service: google_home.delete_timer
          data:
            entity_id: '{{ state_attr("sensor.google_next_timer","active_sensor")
              }}'
            timer_id: '{{ state_attr("sensor.google_next_timer","id") }}'
        - service: timer.cancel
          target:
            entity_id: timer.google_next_timer
          data: {}
        - service: script.notify_web
          data:
            message: Timer stopped
      default: []
  mode: single
- id: '1654047415255'
  alias: Wireless access point restart
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.alert_wirelessap2_offline
    to: not_home
  condition: []
  action:
  - type: turn_off
    device_id: bc23d534656122cd2d15fcbaf69c2dbd
    entity_id: switch.wirelessap2_power_cycler
    domain: switch
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1654483867439'
  alias: Vacuum update status periodically
  description: ''
  trigger:
  - platform: time_pattern
    hours: /3
    minutes: '0'
  condition:
  - condition: device
    device_id: 8532ec8c935bfb73fc9438d6a98033cb
    domain: vacuum
    entity_id: vacuum.family_room
    type: is_docked
  - condition: device
    device_id: 05429a8986c6f325628f5d664519825e
    domain: vacuum
    entity_id: vacuum.play_room
    type: is_docked
  action:
  - service: script.vacuum_update
    data:
      vacuum:
      - vacuum.family_room
      - vacuum.play_room
  mode: single
- id: '1654484047176'
  alias: Vacuum update status while not docked
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    id: family_room
    event_data:
      domain: vacuum
      service: start
      service_data:
        entity_id: vacuum.family_room
  - platform: event
    event_type: call_service
    id: play_room
    event_data:
      domain: vacuum
      service: start
      service_data:
        entity_id: vacuum.play_room
  condition: []
  action:
  - service: script.vacuum_update
    data: {}
  - wait_for_trigger:
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: vacuum.family_room
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: vacuum.play_room
    timeout: '60'
  - if:
    - condition: trigger
      id: family_room
    then:
    - repeat:
        until:
        - condition: device
          device_id: 8532ec8c935bfb73fc9438d6a98033cb
          domain: vacuum
          entity_id: vacuum.family_room
          type: is_docked
        sequence:
        - delay:
            hours: 0
            minutes: 2
            seconds: 30
            milliseconds: 0
        - service: script.vacuum_update
          data:
            vacuum:
            - vacuum.family_room
  - if:
    - condition: trigger
      id: play_room
    then:
    - repeat:
        until:
        - condition: device
          device_id: 05429a8986c6f325628f5d664519825e
          domain: vacuum
          entity_id: vacuum.play_room
          type: is_docked
        sequence:
        - delay:
            hours: 0
            minutes: 2
            seconds: 30
            milliseconds: 0
        - service: script.vacuum_update
          data:
            vacuum:
            - vacuum.play_room
  mode: parallel
  max: 2
- id: '1654547714136'
  alias: Vacuum refresh until charged
  description: 'Refresh state when docked until 100% charged.

    '
  trigger:
  - platform: device
    device_id: 8532ec8c935bfb73fc9438d6a98033cb
    domain: vacuum
    entity_id: vacuum.family_room
    type: docked
    id: family_room
  - platform: device
    device_id: 05429a8986c6f325628f5d664519825e
    domain: vacuum
    entity_id: vacuum.play_room
    type: docked
    id: play_room
  condition: []
  action:
  - if:
    - condition: trigger
      id: family_room
    then:
    - repeat:
        until:
        - condition: numeric_state
          entity_id: vacuum.family_room
          attribute: battery_level
          above: '99'
        sequence:
        - delay:
            hours: 0
            minutes: 10
            seconds: 0
            milliseconds: 0
        - service: script.vacuum_update
          data:
            vacuum:
            - vacuum.family_room
  - if:
    - condition: trigger
      id: play_room
    then:
    - repeat:
        until:
        - condition: numeric_state
          entity_id: vacuum.play_room
          attribute: battery_level
          above: '99'
        sequence:
        - delay:
            hours: 0
            minutes: 10
            seconds: 0
            milliseconds: 0
        - service: script.vacuum_update
          data:
            vacuum:
            - vacuum.play_room
  mode: single
- id: '1655258894395'
  alias: Update day off sensors
  description: ''
  trigger:
  - id: calendar
    platform: calendar
    entity_id: calendar.nerene
    event: start
  - id: end_of_day
    platform: time
    at: '23:59:00'
  condition: []
  action:
  - if:
    - condition: trigger
      id: calendar
    then:
    - service: script.store_mqtt_sensor
      data:
        name: nerene_events_today
        state: "{%- set today = now() %} {%- set event_date = state_attr(\"calendar.nerene\"\
          ,\"start_time\")|as_datetime %} {%- set event_date = event_date.month ~\
          \ \"-\" ~ event_date.day %} {%- set today = today.month ~ \"-\" ~ today.day\
          \ %} {%- if today == event_date %}\n  {%- set events = state_attr(\"binary_sensor.days_off\"\
          ,\"events_today\")|trim %}\n  {%- set events = events ~ \",\" if events\
          \ not in [\"\",\"None\"] %}\n  {{ events ~ state_attr(\"calendar.nerene\"\
          ,\"message\") }}\n{%- else %}\n  {%- set events_today = state_attr(\"binary_sensor.days_off\"\
          ,\"events_today\") %}\n  {{  iif(events_today is not none, events_today,\
          \ \"\") }}\n{%- endif %}\n"
    else: []
  - if:
    - condition: trigger
      id: end_of_day
    then:
    - service: script.store_mqtt_sensor
      data:
        name: nerene_events_today
        state: ''
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: binary_sensor.day_off
    enabled: false
  mode: single
