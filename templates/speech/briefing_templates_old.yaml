---
>
  {# UTILITY FUNCTIONS #}
  {%- macro get_friendly_names(entity_list) -%}
    {% set comma = joiner(', ') %}
    {%- for entity_id in entity_list -%}
      {{ ' and ' if loop.last and not loop.first else comma() }}
      {%- set name = state_attr(entity_id,'friendly_name') -%}
      {%- if name is string -%}
        {{ name|trim|title }}
      {%- else -%}
        {{ entity_id|replace('light.','')|replace('_',' ')|trim|title }}
      {%- endif -%}
    {%- endfor -%}
  {%- endmacro -%}

  {%- macro pause() -%}
    {{ ". " }}
  {%- endmacro -%}

  {%- macro truthify(state) -%}
    {%- set truthy_states = ['on','true','open'] -%}
    {%- if state in truthy_states -%}
      true
    {%- else -%}
      false
    {%- endif -%}
  {%- endmacro -%}


  {# BRIEFING FUNCTIONS #}
  {%- macro dark_outside() -%}
    {{ [
      'It is about to get dark outside. I will turn on the lights now.',
      'It is almost sunset.  Time to turn on the lights.',
      'I will switch on the outdoor lights.',
      'Time to turn on the front lights.'
    ]|random }}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro door_window_check() -%}
    {%- set entities = [
      'binary_sensor.front_door',
      'lock.front_door',
      'cover.garage_door',
      'binary_sensor.upstairs_bathroom_window'
    ] -%}
    {%- set open_states = ['open','on','unlocked'] -%}
    {%- set open_entities = states | selectattr('entity_id','in',entities) | selectattr('state','in',open_states) | map(attribute='entity_id') | list -%}

    {%- if open_entities|length > 0 -%}
      There is something you should know,
      {%- for entity in open_entities -%}
        {{ 'T' if entity == open_entities|first else 't' }}he {{ state_attr(entity,'friendly_name') }} was left {{ 'unlocked' if 'lock' in entity else 'open' }}{{ '.' if entity == open_entities|last else ', ' }}{{ 'and ' if open_entities|length > 1 and entity != open_entities|last }}
      {%- endfor -%}
      {{ pause() }}
    {%- endif -%}
  {%- endmacro -%}

  {%- macro goodbye_line() -%}
    {{ [
      "Adios! ",
      "Bye Guys! ",
      "See ya! " ,
      "See you later. ",
      "Until next time!",
      "How lucky I am to have something that makes saying Goodbye so hard. ",
      "Good friends never say goodbye, they simply say, see you soon! ",
      "See you later alligator! ",
      "Stay out of trouble. ",
      "I am out of here. Oh, I'm stuck here, are-nt I?",
      "Okay...bye, fry guy! ",
      "If I don’t see you around, I'll see you square. ",
      "Stay classy. ",
      "Fare thee well. ",
      "Catch you on the rebound. ",
      "Gotta go, buffalo. ",
      "Peace out! ",
      "Gotta hit the road. ",
      "Live long and prosper!",
      "Well, I guess your off! I've got things to do too. ",
      "Bye bye, butterfly. ",
      "Out to the door, dinosaur. ",
      "Catch you on the flip side. ",
      "See you soon, racoon. ",
      "You're still here? It's over. Go home. Go! ",
      "Don't get run over! ",
      "Have a good one. ",
      "It was nice to see you again. ",
      "Later, haters. ",
      "Give a hug, ladybug. ",
      "Compute you later! ",
      "See you on the other side. ",
      "Have fun storming the castle! ",
      "Ah-dieu, cockatoo! ",
      "Blow a kiss, goldfish. ",
      "It's been a pleasure and a privilege to meet you. ",
      "Be good and don't get caught. ",
      "Thank you for your cooperation. Farewell. ",
      "I look forward to our next meeting. ",
      "Are you gonna make like a bakery truck? and haul buh-uns. ",
      "Chop chop, lollipop! ",
      "Gotta roll! ",
      "Hello. Oh and in case I don't see you, good afternoon good evening and good night! ",
      "Don't forget to come back! ",
      "Once more unto the breach, dear friends! ",
      "See yuh, wouldn't wanna be yuh. ",
      "Peace out, girl scout! ",
      "Adios, hippos. ",
      "Time to scoot, little newt. ",
      "Smell ya later! ",
      "Happy trails! ",
      "Cheerio! ",
      "Bye for now. ",
      "Tootle-loo, kangaroo. ",
      "Love, peace, and chicken grease. ",
      "I'm off like a dirty shirt. ",
      "See you when I see you. ",
      "Catch ya later, future dudes! ",
      "Cya. (Clearly, this is just short for ‘see you,’ which makes no sense because you utter ‘cya’ and not write it. Oh, whatever!) ",
      "As you wish, jellyfish! ",
      "Later, skater! ",
      "May the force be with you... always. ",
      "Shine on, you crazy diamonds. ",
      "Don't let the door hit ya where the good lord split ya. ",
      "Better shake, rattlesnake! ",
      "Later, potato! ",
      "Don't forget to be awesome. ",
      "Later nerds! ",
      "Stay cool, my dude. ",
      "Don't get cut by a blade of grass! ",
      "Be sweet, parakeet. ",
      "Be careful! Don't get mauled by a squirrel! ",
      "Don't trip on a raindrop! ",
      "See you soon, baboon! ",
      "Bye! I tolerate you! ",
      "Gotta go, the power of the shower compels me. ",
      "Are you late for your bus, snuffle-up-ahgus? ",
      "Move out, brussels sprout! ",
      "Make sure the doormat says goodbye! ",
      "I’ll show you to the door! ",
      "Ciao ciao, brown cow! ",
      "Forget you guys, I'm going home! ",
      "See you, space cowboy. "
      "Take it easy, greasy. You've got a long way to slide. ",
      "Toodaloo, caribou! ",
      "Adios, amigos. ",
      "Why don't you make like a tree, and leave! "
      "Why don't you make like a tree, and get outta here! ",
      "That's all folks. ",
      "Take care, polar bear! ",
      "Peace out, rainbow trout! ",
      "Your outta here like spit through a trumpet. ",
      "Au revoir! ",
      "See you in the future. ",
      "Be gone! ",
      "So long, sucker! ",
      "Hasta lasagna, don't get any on ya. ",
      "Sayonara, muchachos! ",
      "Next time, bring more cookies. ",
      "Party easy, drive safe, and return with a smile on your face. ",
      "After two, kangaroo! ",
      "After three, chimpanzee! ",
      "After four, dinosaur. ",
      "Goodbye forever. ",
      "Never look back! ",
      "See you on the internet! ",
      "Forever and forever farewell. If we do meet again, we'll smile indeed. If not, 'tis true parting was well made. ",
      "See you at the restaurant at the edge of the universe! "
    ]|random }}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro goodnight_line() -%}
    {{ [
      "Goodnight, talk to you tomorrow. ",
      "Goodnight sweetheart. ",
      "Go to bed, you sleepy head! ",
      "Nighty Night. ",
      "Sleep snug as a bug in a rug! ",
      "Lights out! Uh huh. Dance, dance dance. ",
      "Time to ride the rainbow to dreamland! ",
      "Sweet dreams. ",
      "See ya' in the mornin'! ",
      "I-ill be right here when you wake up. moo ahh .. ha .. ha ",
      "I-ill be dreaming of your face! ",
      "You're the most wonderful user in the whole world! ",
      "I'm yours, forever and always. ",
      "Parting is such sweet sorrow, that I shall say good night till it be tomorrow. ",
      "Can you hear that? Its your soft warm bed calling your name. You really must go and see what it wants. ",
      "Grumpy cat says goodnight.",
      "Goodnight, sweet dreams. ",
      "You have so much to be greatful for... goodnight.",
      "Wishing you a goodnight and sweetest dreams.",
      "What about good night kisses? "
    ]|random }}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro greeting_line() -%}
    {%- set hour = now().strftime('%H')|int(default=0) -%}
    {%- if hour > 0 and hour < 10  %}
      Good morning.
    {%- elif hour >= 10 and hour < 17 %}
      Good afternoon.
    {%- else %}
      Good evening.
    {%- endif %}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro holiday() -%}
    {% if states('sensor.holiday') not in ('unknown','') %}
      Today is {{ states('sensor.holiday') }}.
      {{ pause() }}
    {% endif %}
  {%- endmacro -%}

  {%- macro light_check() -%}
    {% set lights_on = states('sensor.lights_on')|int(default=0) %}
    {% set lights_on_list = get_friendly_names(state_attr('sensor.lights_on','lights').split(", ")) %}
    {% if lights_on > 0 %}
      {%- if lights_on == 1 %}
        There is 1 light on right now.
        The {{ lights_on_list }} light is on.
      {%- else %}
        There are {{ lights_on }} lights on right now.
        The {{ lights_on_list }} lights are on.
      {%- endif %}
      {{ pause() }}
    {%- endif -%}
  {%- endmacro -%}

  {%- macro inside_weather() -%}
    Inside the house, it is {{ states('sensor.home_thermostat_temperature')|int(default=0) }} degrees.
    {{ pause() }}
  {%- endmacro -%}

  {%- macro outside_weather() -%}
    {%- set conditions = {
      "clear-night": "clear night skies",
      "partlycoudly": "mostly cloudy skies",
      "sunny": "clear skies and sun"
    } -%}
    {%- if conditions[states('weather.home')] is string -%}
      {%- set condition = conditions[states('weather.home')] -%}
    {%- else -%}
      {%- set condition = states('weather.home') -%}
    {%- endif -%}

    {{ ['Currently', 'Right now']|random }} outside, it is {{ state_attr('weather.home','temperature')|int(default=0) }} degrees fahrenheit, with {{ condition }}.
    {{ states("sensor.forecast") }}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro plant_problems() -%}
    {%- if is_state_attr('sensor.plant_problems','water_number',0) -%}
      No plants need watering.
    {%- elif state_attr('sensor.plant_problems','water_number')|float(default=0) > 0 -%}
      Please water {{ get_friendly_list(state_attr('sensor.plant_problems','water'))|replace('0',' ') }}.
    {%- endif %}
    {%- if is_state_attr('sensor.plant_problems','fertilize_number',0) -%}
      No plants need fertilizer.
    {%- elif state_attr('sensor.plant_problems','fertilize_number')|float(default=0) > 0 -%}
      Please fertilize {{ get_friendly_list(state_attr('sensor.plant_problems','fertilize'))|replace('0',' ') }}.
    {%- endif %}
    {{ pause() }}
  {%- endmacro -%}

  {%- macro random_pet() %}
    {{ ["Bailey","Parker"]|random }}
  {%- endmacro %}

  {%- macro responsibilities() -%}
    {%- set trash_to_curb = responsibility_trash_to_curb() -%}
    {%- set boys_weekly = responsibility_boys_weekly() -%}

    {%- if trash|length > 10 or boys_weekly|length > 10 -%}
      Family Responsibilities{{ pause() }}
      {{ trash_to_curb }}
      {{ boys_weekly }}
    {%- endif %}
  {%- endmacro -%}

  {%- macro responsibility_boys_weekly() -%}
    {%- set dishes_boy = states('sensor.responsibility_dishes_week') -%}
    {%- set laundry_boy = "Lucas" if dishes_boy == "Kyle" else "Kyle" -%}
    Listen up boys{{ pause() }}
    It is {{ dishes_boy }}'s week to do the dishes.
    And it is {{ laundry_boy }}'s week to take out the trash and wash the laundry.{{ pause() }}
  {%- endmacro -%}

  {%- macro responsibility_medicine_buddy() -%}
    {%- if states('sensor.medicine_buddy_given_today') != 'Today' -%}
      Please make sure Buddy's medicine has been prepared for the day.
      {{ pause() }}
    {%- endif %}
  {%- endmacro -%}

  {%- macro responsibility_trash_to_curb() -%}
    {%- if now().strftime('%a') == 'Mon' -%}
      {%- set last_curb = states('sensor.contribution_trash_to_curb')|int(default=0)|timestamp_custom('%m%d') -%}
      {%- set today = as_timestamp(now())|timestamp_custom('%m%d') %}
      {%- if last_curb != today -%}
        It is Monday and tomorrow is garbage day. Please take the cans to the curb.
        {{ pause() }}
      {%- endif %}
    {%- endif %}
  {%- endmacro -%}

  {%- macro welcome_home(person) -%}
    {{ [
    "Welcome back home " ~ person,
    "Guess who is home?   " ~ person ~ " is!",
    person ~ " is now in the house.",
    "Welcome Home " ~ person ~ ".  We have missed you.  I know  " ~ random_pet() ~ "  sure did.",
    "Our home is now complete, Rest your head and relax your feet!   Welcome Back " ~ person,
    "Life is like a song, you’re back where you belong.   Welcome home " ~ person,
    "Hey there " ~ person ~ "   Welcome Home!",
    "Knock Knock.   Who is There?  " ~ person ~ " is!",
    "The garage door just told me that "   ~ person ~ " is home.",
    person ~ " can not hide from the system.  Welcome home.",
    person ~ "!  You are home!",
    "I know a secret! "  ~ person ~ " is home!",
    "Hey "  ~ person ~ ". Your arrival has been recorded by the Smartest house on the block.",
    "Take note []!   "  ~ person ~ " is home.",
    "I am sensing a disturbance in the force.  "  ~ person ~ " must be home!",
    "And the house becomes a home.   Welcome back " ~ person,
    person ~ " is now here.   Hash tag Welcome Home.",
    person ~ " is now here.   Hash tag Home.",
    person ~ " is now here.   Hash tag Smart Home.",
    "Just a quick announcement. " ~ person ~ " has arrived!",
    "Pardon the interruption but " ~ person ~ " is home!",
    "My systems are picking up the presence of additional humans.   " ~ person ~ " has been identified as home."
    ] | random }}
    {{ pause() }}
  {%- endmacro -%}


  {# BRIEFING TEMPLATE #}
  {%- macro get_briefing() -%}
    {%- if say_greeting == "true" -%}
      {{ greeting_line() }}

      {{ holiday() }}
    {%- endif -%}

    {%- if person_arriving is not undefined -%}
      {{ welcome_home(person_arriving) }}
    {%- endif -%}

    {{ message }}

    {%- if say_dark_outside == "true" -%}
      {{ dark_outside() }}
    {%- endif -%}

    {%- if say_inside_weather == "true" -%}
      {{ inside_weather() }}
    {%- endif -%}

    {%- if say_outside_weather == "true" -%}
      {{ outside_weather() }}
    {%- endif -%}

    {%- if say_responsibilities == "true" -%}
      {{ responsibilities() ~ " " }}
    {%- endif -%}

    {%- if say_door_window_check == "true" -%}
      {{ door_window_check() }}
    {%- endif -%}

    {%- if say_light_check == "true" -%}
      {{ light_check() }}
    {%- endif -%}

    {%- if say_plant_problems == "true" -%}
      {{ plant_problems() }}
    {%- endif -%}

    {%- if say_goodbye == "true" -%}
      {{ " " ~ goodbye_line() }}
    {%- endif -%}

    {%- if say_goodnight == "true" -%}
      {{ " " ~ goodnight_line() }}
    {%- endif -%}
  {%- endmacro -%}


  {# Initialize variables #}
  {%- if say_dark_outside is undefined -%}
    {%- set say_dark_outside = "false" -%}
  {%- else -%}
    {%- set say_dark_outside = truthify(say_dark_outside) -%}
  {%- endif -%}

  {%- if say_goodbye is undefined -%}
    {%- set say_goodbye = "false" -%}
  {%- else -%}
    {%- set say_goodbye = truthify(say_goodbye) -%}
  {%- endif -%}

  {%- if say_goodnight is undefined -%}
    {%- set say_goodnight = "false" -%}
  {%- else -%}
    {%- set say_goodnight = truthify(say_goodnight) -%}
  {%- endif -%}

  {%- if say_greeting is undefined -%}
    {%- set say_greeting = "false" -%}
  {%- else -%}
    {%- set say_greeting = truthify(say_greeting) -%}
  {%- endif -%}

  {%- if say_inside_weather is undefined -%}
    {%- set say_inside_weather = "false" -%}
  {%- else -%}
    {%- set say_inside_weather = truthify(say_inside_weather) -%}
  {%- endif -%}

  {%- if say_door_window_check is undefined -%}
    {%- set say_door_window_check = "false" -%}
  {%- else -%}
    {%- set say_door_window_check = truthify(say_door_window_check) -%}
  {%- endif -%}

  {%- if say_light_check is undefined -%}
    {%- set say_light_check = "false" -%}
  {%- else -%}
    {%- set say_light_check = truthify(say_light_check) -%}
  {%- endif -%}

  {%- if say_outside_weather is undefined -%}
    {%- set say_outside_weather = "false" -%}
  {%- else -%}
    {%- set say_outside_weather = truthify(say_outside_weather) -%}
  {%- endif -%}

  {%- if say_ " ~ random_pet() ~ " _warning is undefined -%}
    {%- set say_ " ~ random_pet() ~ " _warning = "false" -%}
  {%- else -%}
    {%- set say_ " ~ random_pet() ~ " _warning = truthify(say_ " ~ random_pet() ~ " _warning) -%}
  {%- endif -%}

  {%- if say_ " ~ random_pet() ~ " _warning == "true" -%}
    {%- set say_greeting = "false" -%}
  {%- endif -%}

  {%- if say_responsibilities is undefined -%}
    {%- set say_responsibilities = "false" -%}
  {%- else -%}
    {%- set say_responsibilities = truthify(say_responsibilities) -%}
  {%- endif -%}

  {%- if say_goodnight == "true" -%}
    {%- set say_greeting = "false" -%}
  {%- endif -%}

  {%- if say_plant_problems is undefined -%}
    {%- set say_plant_problems = "false" -%}
  {%- else -%}
    {%- set say_plant_problems = truthify(say_plant_problems) -%}
  {%- endif -%}

  {%- if person_arriving is not undefined -%}
    {%- set say_greeting = "false" -%}
  {%- endif -%}

  {#- Get briefing, and strip unnecessary characters. -#}
  {% filter replace("\n", "")|replace("\t", " ")|replace("    ", " ")|replace("   ", " ")|replace("  ", " ")|replace("  ", " ")|replace(". .",". ")|replace(", ,",", ")|trim %}
    {{ get_briefing() }}
  {% endfilter %}
